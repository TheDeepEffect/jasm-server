### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  user: User
}

type Comment {
  content: String
  id: ID
  post: Post
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Follow {
  followByUser: User
  followToUser: User
  id: ID
}

type InvalidUser {
  message: String!
}

type Like {
  id: ID
  post: Post
  user: User
}

union LoginResult = AuthPayload | InvalidUser

type Mutation {
  addComment(content: String!, postId: String!): Comment
  createPost(description: String, isPrivate: Boolean, url: String!): Post
  deleteComment(id: String!): Comment
  deletePost(id: String!): Post
  follow(userToId: String!): Follow
  like(postId: String!): Like
  login(password: String!, username: String!): LoginResult
  signup(email: String!, name: String!, password: String!, username: String!): SignupResult
  unfollow(id: String!): Follow
  unlike(postId: String!): Like
  updateComment(content: String!, id: String!): Comment
  updatePost(description: String, id: String!, isPrivate: Boolean, url: String!): Post
}

type Post {
  author: User
  createdAt: DateTime
  description: String
  id: ID
  likes: [Like]
  updatedAt: DateTime
  url: String
}

type Query {
  feed: [Post]
  post(id: String!): Post
  users(filter: String): [User]!
}

union SignupResult = AuthPayload | UserAlreadyExists

type User {
  comments: [Comment]
  createdAt: DateTime
  email: String
  id: ID
  likes: [Like]
  name: String
  posts: [Post]
  username: String
}

type UserAlreadyExists {
  message: String!
}
